"""Networks

Revision ID: 30f9582620d5
Revises: c26ec36e1f49
Create Date: 2025-08-07 03:01:59.937930

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects.postgresql import CIDR


# revision identifiers, used by Alembic.
revision: str = "30f9582620d5"
down_revision: Union[str, None] = "c26ec36e1f49"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("devices", "address", existing_type=sa.TEXT(), nullable=False)
    op.add_column(
        "invites",
        sa.Column("network", CIDR, nullable=False),
    )
    op.create_unique_constraint(op.f("uq_invites_network"), "invites", ["network"])
    op.add_column(
        "users",
        sa.Column("network", CIDR, nullable=False),
    )
    op.alter_column("users", "tg_username", existing_type=sa.TEXT(), nullable=False)
    op.create_unique_constraint(op.f("uq_users_network"), "users", ["network"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("uq_users_network"), "users", type_="unique")
    op.alter_column("users", "tg_username", existing_type=sa.TEXT(), nullable=True)
    op.drop_column("users", "network")
    op.drop_constraint(op.f("uq_invites_network"), "invites", type_="unique")
    op.drop_column("invites", "network")
    op.alter_column("devices", "address", existing_type=sa.TEXT(), nullable=True)
    # ### end Alembic commands ###
